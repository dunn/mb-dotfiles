#!/usr/bin/env bash

# prompt is largely due to $js
# https://github.com/jennschiffer/dotfiles/blob/master/bash_prompt

# http://stackoverflow.com/a/1703567
# Solarized colors
# https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized
BOLD=$(tput bold)
RESET=$(tput sgr0)
SOLAR_YELLOW=$(tput setaf 136)
SOLAR_ORANGE=$(tput setaf 166)
SOLAR_RED=$(tput setaf 124)
SOLAR_MAGENTA=$(tput setaf 125)
SOLAR_VIOLET=$(tput setaf 61)
SOLAR_BLUE=$(tput setaf 33)
SOLAR_CYAN=$(tput setaf 37)
SOLAR_GREEN=$(tput setaf 64)
SOLAR_WHITE=$(tput setaf 254)

is_git_repo() {
  $(git rev-parse --is-inside-work-tree &> /dev/null)
}

is_git_dir() {
  $(git rev-parse --is-inside-git-dir 2> /dev/null)
}

get_git_branch() {
  local branch_name

  # Get the short symbolic ref
  branch_name=$(git symbolic-ref --quiet --short HEAD 2> /dev/null) ||
    # If HEAD isn't a symbolic ref, get the short SHA
    branch_name=$(git rev-parse --short HEAD 2> /dev/null) ||
    # Otherwise, just give up
    branch_name="(unknown)"

  printf $branch_name
}
# Git status information
prompt_git() {
  local git_info git_state uc us ut st

  if ! is_git_repo || is_git_dir; then
    return 1
  fi

  git_info=$(get_git_branch)

  # Check for uncommitted changes in the index
  if ! $(git diff --quiet --ignore-submodules --cached); then
    uc="${SOLAR_GREEN}+"
  fi

  # Check for unstaged changes
  if ! $(git diff-files --quiet --ignore-submodules --); then
    us="${SOLAR_RED}!"
  fi

  # Check for untracked files
  if [ -n "$(git ls-files --others --exclude-standard)" ]; then
    ut="${SOLAR_ORANGE}?"
  fi

  # Check for stashed files
  if $(git rev-parse --verify refs/stash &>/dev/null); then
    st="${SOLAR_YELLOW}$"
  fi

  git_state=$uc$us$ut$st

  # Combine the branch name and state information
  if [[ $git_state ]]; then
    git_info="$git_info${SOLAR_ORANGE}[$git_state${SOLAR_ORANGE}]${RESET}"
  fi

  # You know youâ€™re on `gh-pages`, right? *Right*?
  if [[ $git_info == "gh-pages" ]]; then
    style_branch="${SOLAR_BLUE}"
  fi

  # Donâ€™t screw up `stable`.
  if [[ $git_info == *stable* ]]; then
    style_branch="${SOLAR_RED}"
  fi

  printf "${RESET}${BOLD} on ${RESET}${SOLAR_YELLOW}${style_branch}${git_info}"
}

PS1="\[\033]0;\w\007\]"
PS1+="\[$SOLAR_ORANGE\]\u\[$RESET\]"
PS1+="\[$BOLD\] in\[$RESET\]"
PS1+="\[$SOLAR_YELLOW\] \h\[$RESET\]"
PS1+="\[$BOLD\] at\[$RESET\]"
PS1+="\[$SOLAR_RED\] \w"
PS1+="\$(prompt_git)"
PS1+="\[$RESET\]"
PS1+="\n"
if [[ $(uname -s) == "Darwin" ]]; then
  PS1+="ðŸŒ°  "
else
  PS1+="ðŸ”¨  "
fi
export PS1;

PS2="\[$SOLAR_WHITE\]â†’ \[$RESET\]";
export PS2;
